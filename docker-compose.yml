# Docker-compose configuration for development

version: '2'

services:
    django:
        build:
            context: .
            dockerfile: Dockerfile-django
        ports:
            - "3000:80"
        volumes:
            - "./parrot_mania:/app"
            - ".data/media:/files/media"
        environment:
            - PYTHONUNBUFFERED=0
        # Add -Wall option to see the (deprecation) warnings
        # command: python -Wall manage.py runserver 0.0.0.0:80
        command: python manage.py runserver 0.0.0.0:80
        entrypoint: /usr/bin/wait-for-it.sh postgres:5432 -t 60 --
        depends_on:
            - postgres
            - redis

    node:
        build:
            context: .
            dockerfile: Dockerfile-node
        ports:
            - "8000:8000"
            - "8001:8001"
        volumes:
            - "./app:/app"
            - ".data/node_modules:/app/node_modules"
        depends_on:
            - django

    postgres:
        image: postgres:10
        # Comment in the following lines to connect to your Dockerized instance of Postgres from your host machine.
        # Change the host port (before colon) if you have a local instance of Postgres running on that port.
        # ports:
        #     - "5432:5432"
        volumes:
            - ".data/postgres:/var/lib/postgresql/data"
        environment:
            POSTGRES_USER: parrot_mania
            POSTGRES_PASSWORD: parrot_mania

    redis:
        image: redis:4.0.10-alpine
        volumes:
            - ".data/redis:/data"
