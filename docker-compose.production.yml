# Docker-compose configuration for production

version: '2'

services:
    django:
        build:
            context: .
            dockerfile: Dockerfile-django.production
        container_name: parrot_mania_django
        restart: unless-stopped
        volumes:
            - "/var/lib/docker-nginx/files/parrot_mania/assets:/files/assets"
            - "/var/log/parrot_mania:/var/log/parrot_mania"
        # For some reason the command also has to be specified here, otherwise the entrypoint+command combination won't
        #  work.
        entrypoint: /usr/bin/wait-for-it.sh postgres:5432 -t 60 --
        command: gunicorn parrot_mania.wsgi:application --workers 2 --bind :80
        networks:
            - default
            - parrot_mania_nginx
            - parrot_mania_postgres
        depends_on:
            - redis
        external_links:
            - postgres-10:postgres

    node:
        build:
            context: .
            dockerfile: Dockerfile-node.production
        container_name: parrot_mania_node
        restart: unless-stopped
        command: npm run start
        volumes:
            - "/var/lib/docker-nginx/files/parrot_mania/app/assets:/files/assets"
            - "/var/log/parrot_mania:/var/log/parrot_mania"
        networks:
            - default
            - parrot_mania_nginx

    redis:
        image: redis:4.0.10-alpine
        restart: unless-stopped
        volumes:
            - "/var/lib/docker-parrot_mania/redis:/data"
        networks:
            - default

# NB: These networks must be created by fabfile and contain the global nginx/postgres containers.
# Keep it in sync with fabfile!
networks:
    default:
        external:
            name: parrot_mania_default
    parrot_mania_nginx:
        external: true
    parrot_mania_postgres:
        external: true
